name: Rust CI with Docker

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    # runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, windows-latest, macOS-latest]
#        rust: [stable, nightly]
    steps:
      - uses: hecrj/setup-rust-action@v1.4.1
        with:
          rust-version: ${{ matrix.rust }}
      - uses: actions/checkout@master
#      - name: Run tests
#        run: cargo test --verbose

      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build Docker image
        run: |
          cd apps/rw-admin
          # 创建一个用于多平台构建的构建器
          docker buildx create --use
          # 设置构建器为多平台构建器
          docker buildx inspect --bootstrap
          docker buildx build --platform linux/arm64 . --file Dockerfile --tag ${{ vars.hubAddr }}/${{ vars.USER_NAME }}/${{ vars.IMAGE_NAME }}:${{ vars.tag }} &
          docker buildx build --platform linux/amd64 . --file Dockerfile --tag ${{ vars.hubAddr }}/${{ vars.USER_NAME }}/${{ vars.IMAGE_NAME }}:${{ vars.tag }} &
          # 等待构建完成，延时 600 秒
          sleep 600
      - name: Log in to Docker registry
        run: |
          docker login --username=${{ secrets.DOCKER_HUB_USERNAME }} --password=${{ secrets.DOCKER_HUB_PASSWORD }} registry.cn-hangzhou.aliyuncs.com

      - name: Wait for Docker builds to complete
        run: wait

      - name: Push Docker image
        run: |
          docker push ${{ vars.hubAddr }}/${{ vars.USER_NAME }}/${{ vars.IMAGE_NAME }}:${{ vars.tag }}
